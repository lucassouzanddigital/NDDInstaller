<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAADZSURBVFhH3dAxCgNBDEPRPWJOsvfvNsa4fIUFs0Xy4TdG
        SMxc930/G6+30Jic+Hk0Jid+Ho3JiZ9HY3Li59GYnPh5NCYnfh6NyYmfR2Ny4ufRmJz4P/K5npWFfkZ2
        7xqNyUJjsnvXaEwWGpPdu0ZjstCY7N41GpOFxmT3rtGYLDQmu3eNxmShMdm9azQmC43J7l2jMVloTHbv
        Go3JQmOye38HvVa+ltVRRqVJVkcZlSZZHWVUmmR1lFFpktVRRqVJVkcZlSZZHWVUmmR1lFFpktVRRqXb
        7PV8AVPM1KaUOMvMAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAADZSURBVFhH3dAxCgNBDEPRPWJOsvfvNsa4fIUFs0Xy4TdG
        SMxc930/G6+30Jic+Hk0Jid+Ho3JiZ9HY3Li59GYnPh5NCYnfh6NyYmfR2Ny4ufRmJz4P/K5npWFfkZ2
        7xqNyUJjsnvXaEwWGpPdu0ZjstCY7N41GpOFxmT3rtGYLDQmu3eNxmShMdm9azQmC43J7l2jMVloTHbv
        Go3JQmOye38HvVa+ltVRRqVJVkcZlSZZHWVUmmR1lFFpktVRRqVJVkcZlSZZHWVUmmR1lFFpktVRRqXb
        7PV8AVPM1KaUOMvMAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAADZSURBVFhH3dAxCgNBDEPRPWJOsvfvNsa4fIUFs0Xy4TdG
        SMxc930/G6+30Jic+Hk0Jid+Ho3JiZ9HY3Li59GYnPh5NCYnfh6NyYmfR2Ny4ufRmJz4P/K5npWFfkZ2
        7xqNyUJjsnvXaEwWGpPdu0ZjstCY7N41GpOFxmT3rtGYLDQmu3eNxmShMdm9azQmC43J7l2jMVloTHbv
        Go3JQmOye38HvVa+ltVRRqVJVkcZlSZZHWVUmmR1lFFpktVRRqVJVkcZlSZZHWVUmmR1lFFpktVRRqXb
        7PV8AVPM1KaUOMvMAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAgACAAIAAAACAgAAAAIAAAACAgAAAAIAAwMDAAMDcwADwyqYAgICAAP8A/wD/AAAA//8AAAD/
        AAAA//8AAAD/AP///wDw+/8ApKCgANTw/wCx4v8AjtT/AGvG/wBIuP8AJar/AACq/wAAktwAAHq5AABi
        lgAASnMAADJQANTj/wCxx/8Ajqv/AGuP/wBIc/8AJVf/AABV/wAASdwAAD25AAAxlgAAJXMAABlQANTU
        /wCxsf8Ajo7/AGtr/wBISP8AJSX/AAAA/wAAANwAAAC5AAAAlgAAAHMAAABQAOPU/wDHsf8Aq47/AI9r
        /wBzSP8AVyX/AFUA/wBJANwAPQC5ADEAlgAlAHMAGQBQAPDU/wDisf8A1I7/AMZr/wC4SP8AqiX/AKoA
        /wCSANwAegC5AGIAlgBKAHMAMgBQAP/U/wD/sf8A/47/AP9r/wD/SP8A/yX/AP8A/wDcANwAuQC5AJYA
        lgBzAHMAUABQAP/U8AD/seIA/47UAP9rxgD/SLgA/yWqAP8AqgDcAJIAuQB6AJYAYgBzAEoAUAAyAP/U
        4wD/sccA/46rAP9rjwD/SHMA/yVXAP8AVQDcAEkAuQA9AJYAMQBzACUAUAAZAP/U1AD/sbEA/46OAP9r
        awD/SEgA/yUlAP8AAADcAAAAuQAAAJYAAABzAAAAUAAAAP/j1AD/x7EA/6uOAP+PawD/c0gA/1clAP9V
        AADcSQAAuT0AAJYxAABzJQAAUBkAAP/w1AD/4rEA/9SOAP/GawD/uEgA/6olAP+qAADckgAAuXoAAJZi
        AABzSgAAUDIAAP//1AD//7EA//+OAP//awD//0gA//8lAP//AADc3AAAubkAAJaWAABzcwAAUFAAAPD/
        1ADi/7EA1P+OAMb/awC4/0gAqv8lAKr/AACS3AAAerkAAGKWAABKcwAAMlAAAOP/1ADH/7EAq/+OAI//
        awBz/0gAV/8lAFX/AABJ3AAAPbkAADGWAAAlcwAAGVAAANT/1ACx/7EAjv+OAGv/awBI/0gAJf8lAAD/
        AAAA3AAAALkAAACWAAAAcwAAAFAAANT/4wCx/8cAjv+rAGv/jwBI/3MAJf9XAAD/VQAA3EkAALk9AACW
        MQAAcyUAAFAZANT/8ACx/+IAjv/UAGv/xgBI/7gAJf+qAAD/qgAA3JIAALl6AACWYgAAc0oAAFAyANT/
        /wCx//8Ajv//AGv//wBI//8AJf//AAD//wAA3NwAALm5AACWlgAAc3MAAFBQAPLy8gDm5uYA2traAM7O
        zgDCwsIAtra2AKqqqgCenp4AkpKSAIaGhgB6enoAbm5uAGJiYgBWVlYASkpKAD4+PgAyMjIAJiYmABoa
        GgAODg4Ax8fHx8fHx8fHxwDHx8fHx8fHx8fHAMfHx8fHx8fHx8fHx8fHx8fHx8fHAMfHx8fHx8fHx8cA
        x8fHx8fHx8fHx8fHx8fHx8fHx8cAx8fHx8fHx8fHxwDHx8fHx8fHx8fHx8fHx8fHx8fHxwDHx8fHx8fH
        x8fHAMfHx8fHx8fHx8fHx8fHx8fHx8fHAMfHx8fHx8fHx8cAx8fHx8fHx8fHx8fHx8fHx8fHx8cAx8fH
        x8fHx8fHxwDHx8fHx8fHx8fHx8fHx8fHx8fHxwDHx8fHx8fHx8fHAMfHx8fHx8fHx8fHx8fHx8fHx8fH
        AMfHx8fHx8fHx8cAx8fHx8fHx8fHx8fHx8fHx8fHx8cAx8fHx8fHx8fHxwDHx8fHx8fHx8fHx8fHx8fH
        x8fHxwDHx8fHx8fHx8fHAMfHx8fHx8fHx8cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfH
        x8fHx8fHx8cA9/f39/f39/f39wAAAAAAAAAAAAAAx8fHx8fHx8fHxwD39/f39/f39/f3AAAAAAAAAAAA
        AADHx8fHx8fHx8fHAPf39/f39/f39/cAAAAAAAAAAAAAAMfHx8fHx8fHx8cA9/f39/f39/f39wAAAAAA
        AAAAAAAAx8fHx8fHx8fHxwD39/f39/f39/f3AAAAAAAAAAAAAADHx8fHx8fHx8fHAPf39/f39/f39/cA
        AAAAAAAAAAAAAMfHx8fHx8fHx8cA9/f39/f39/f39wAAAAAAAAAAAAAAx8fHx8fHx8fHxwD39/f39/f3
        9/f3AAAAAAAAAAAAAADHx8fHx8fHx8fHAPf39/f39/f39/cAAAAAAAAAAAAAAMfHx8fHx8fHx8cA9/f3
        9/f39/f39wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD39/f39/f39/f3
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPf39/f39/f39/cAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9/f39/f3
        9/f39wAAAAAAAAAAAAAAAAAAAAAAAAAAAAD39/f39/f39/f3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPf3
        9/f39/f39/cAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9/f39/f39/f39wAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD39/f39/f39/f3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPf39/f39/f39/cAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9/f39/f39/f39wAAAAAAAAAAAAAAAAAAAAAAAAAAAAD39/f39/f39/f3AAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAgBAAAIAQAACAEAAAgBAAAIAQAACAEAAAgBAAAIAQAACAEAAAgBAD/////ACAH/wAg
        B/8AIAf/ACAH/wAgB/8AIAf/ACAH/wAgB/8AIAf/ACAH//////8AP///AD///wA///8AP///AD///wA/
        //8AP///AD///wA///8AP///
</value>
  </data>
</root>